{"version":3,"names":["mdDropdownListCss","MdDropdownListStyle0","MDDropdownList","toggleDropdown","this","isOpen","selectOption","option","selectedOption","render","h","key","class","onClick","items","map","item"],"sources":["src/components/md-dropdown-list/md-dropdown-list.css?tag=md-dropdown-list&encapsulation=shadow","src/components/md-dropdown-list/md-dropdown-list.tsx"],"sourcesContent":[".md-dropdown-list {\r\n  font-family: var(--md-font-family, sans-serif);\r\n  font-size: 1rem;\r\n  border: 1px solid var(--md-color-primary, #ccc);\r\n  border-radius: 0.25rem;\r\n  box-sizing: border-box;\r\n  color: var(--md-text-primary, #333);\r\n  box-shadow: 1px 1px 0 1px var(--md-color-primary, #ccc);\r\n  max-width: 256px;\r\n  transition: height 0.2s ease;\r\n}\r\n\r\n.md-dropdown-list .md-selected-option {\r\n  cursor: pointer;\r\n  font-weight: 700;\r\n\r\n  padding: 0.75rem;\r\n}\r\n\r\n.md-dropdown-options {\r\n  list-style-type: none;\r\n  margin: 0;\r\n  padding: 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  /* gap: 0.5rem; */\r\n}\r\n\r\n.md-dropdown-list li:first-child {\r\n  border-top: 1px solid var(--md-color-secondary, #ccc);\r\n}\r\n\r\n.md-dropdown-options li:not(:last-child) {\r\n  border-bottom: 1px solid var(--md-color-secondary, #ccc);\r\n}\r\n\r\n.md-dropdown-options li {\r\n  cursor: pointer;\r\n  padding: 0.5rem;\r\n  transition: background-color 0.1s ease;\r\n}\r\n\r\n.md-dropdown-options li:hover {\r\n  background-color: var(--md-color-secondary, #ccc);\r\n  color: var(--md-color-primary, white);\r\n}\r\n","import { Component, h, Prop, State } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'md-dropdown-list',\r\n  styleUrl: 'md-dropdown-list.css',\r\n  shadow: true,\r\n})\r\nexport class MDDropdownList {\r\n  @Prop() items: string[] = ['Option 1', 'Option 2', 'Option 3'];\r\n  @State() isOpen = false;\r\n  @State() selectedOption: string | undefined;\r\n\r\n  toggleDropdown() {\r\n    this.isOpen = !this.isOpen;\r\n  }\r\n\r\n  selectOption(option: string) {\r\n    this.selectedOption = option;\r\n    this.isOpen = false;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"md-dropdown-list\">\r\n        <div class=\"md-selected-option\" onClick={() => this.toggleDropdown()}>\r\n          {this.selectedOption ? this.selectedOption : 'Select an option'}\r\n        </div>\r\n        {this.isOpen && (\r\n          <ul class=\"md-dropdown-options\">\r\n            {this.items.map(item => (\r\n              <li onClick={() => this.selectOption(item)}>{item}</li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"2CAAA,MAAMA,EAAoB,g3BAC1B,MAAAC,EAAeD,E,MCMFE,EAAc,M,oCACC,CAAC,WAAY,WAAY,Y,YACjC,M,8BAGlB,cAAAC,GACEC,KAAKC,QAAUD,KAAKC,M,CAGtB,YAAAC,CAAaC,GACXH,KAAKI,eAAiBD,EACtBH,KAAKC,OAAS,K,CAGhB,MAAAI,GACE,OACEC,EAAA,OAAAC,IAAA,2CAAKC,MAAM,oBACTF,EAAA,OAAAC,IAAA,2CAAKC,MAAM,qBAAqBC,QAAS,IAAMT,KAAKD,kBACjDC,KAAKI,eAAiBJ,KAAKI,eAAiB,oBAE9CJ,KAAKC,QACJK,EAAA,MAAAC,IAAA,2CAAIC,MAAM,uBACPR,KAAKU,MAAMC,KAAIC,GACdN,EAAA,MAAIG,QAAS,IAAMT,KAAKE,aAAaU,IAAQA,M","ignoreList":[]}