{"version":3,"names":["mdModalCss","MdModalStyle0","MdModal","componentWillLoad","this","internalIsOpen","isOpen","open","close","render","h","key","class","onClick","modalTitle"],"sources":["src/components/md-modal/md-modal.css?tag=md-modal&encapsulation=shadow","src/components/md-modal/md-modal.tsx"],"sourcesContent":[".md-modal-container {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  opacity: 0;\r\n  pointer-events: none;\r\n  transition: all 0.1s ease;\r\n}\r\n\r\n.md-modal-container.open {\r\n  opacity: 1;\r\n  pointer-events: all;\r\n}\r\n\r\n.md-modal {\r\n  font-family: var(--md-font-family, sans-serif);\r\n  padding: 1rem;\r\n  font-size: 1rem;\r\n  border: 1px solid var(--md-color-primary, #ccc);\r\n  border-radius: 0.25rem;\r\n  box-sizing: border-box;\r\n  transition: all 0.2s ease;\r\n  color: var(--md-text-primary, #333);\r\n  box-shadow: 1px 1px 0 1px var(--md-color-primary, #ccc);\r\n  position: absolute;\r\n  width: 600px;\r\n  background: white;\r\n}\r\n\r\n.md-modal-backdrop {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0.5);\r\n}\r\n\r\n.md-modal-content {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  height: 100%;\r\n}\r\n\r\n.md-modal-actions {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin-top: 1rem;\r\n}\r\n\r\n.md-modal-title {\r\n  padding-bottom: 1rem;\r\n  border-bottom: 1px solid var(--md-color-primary, #ccc);\r\n}\r\n","import { Component, h, Prop, Event, EventEmitter, Method, State } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'md-modal',\r\n  styleUrl: 'md-modal.css',\r\n  shadow: true,\r\n})\r\nexport class MdModal {\r\n  @Prop() isOpen: boolean = false;\r\n  @Prop({ reflect: true }) modalTitle: string = 'My modal title';\r\n  @State() internalIsOpen: boolean = false;\r\n  @Event() closeModal: EventEmitter<void>;\r\n\r\n  componentWillLoad() {\r\n    this.internalIsOpen = this.isOpen;\r\n  }\r\n\r\n  @Method()\r\n  async open() {\r\n    this.internalIsOpen = true;\r\n  }\r\n\r\n  @Method()\r\n  async close() {\r\n    this.internalIsOpen = false;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div class={`md-modal-container ${this.internalIsOpen ? 'open' : ''}`}>\r\n        <div class=\"md-modal-backdrop\" onClick={() => this.close()}></div>\r\n        <div class=\"md-modal\">\r\n          <div class=\"md-modal-content\">\r\n            <h2 class=\"md-modal-title\">{this.modalTitle}</h2>\r\n            <slot></slot>\r\n            <div class=\"md-modal-actions\">\r\n              <md-button onClick={() => this.close()}>Close</md-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"kDAAA,MAAMA,EAAa,06BACnB,MAAAC,EAAeD,E,MCMFE,EAAO,M,4EACQ,M,gBACoB,iB,oBACX,K,CAGnC,iBAAAC,GACEC,KAAKC,eAAiBD,KAAKE,M,CAI7B,UAAMC,GACJH,KAAKC,eAAiB,I,CAIxB,WAAMG,GACJJ,KAAKC,eAAiB,K,CAGxB,MAAAI,GACE,OACEC,EAAA,OAAAC,IAAA,2CAAKC,MAAO,sBAAsBR,KAAKC,eAAiB,OAAS,MAC/DK,EAAA,OAAAC,IAAA,2CAAKC,MAAM,oBAAoBC,QAAS,IAAMT,KAAKI,UACnDE,EAAA,OAAAC,IAAA,2CAAKC,MAAM,YACTF,EAAA,OAAAC,IAAA,2CAAKC,MAAM,oBACTF,EAAA,MAAAC,IAAA,2CAAIC,MAAM,kBAAkBR,KAAKU,YACjCJ,EAAA,QAAAC,IAAA,6CACAD,EAAA,OAAAC,IAAA,2CAAKC,MAAM,oBACTF,EAAA,aAAAC,IAAA,2CAAWE,QAAS,IAAMT,KAAKI,SAAO,Y","ignoreList":[]}